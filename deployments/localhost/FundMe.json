{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xe631ee1576d8fcf3f27177f9aa564ea46b15981f330d487a382559bf3e0d85ad",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "949298",
    "logsBloom": "0x
    "blockHash": "0x34e0c8e22208b066b481b565a15ceea36e1e4e5eaacb768df9639a6071e3233f",
    "transactionHash": "0xe631ee1576d8fcf3f27177f9aa564ea46b15981f330d487a382559bf3e0d85ad",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "949298",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "9c8029ffe6926bc94888ea76fcf89c83",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Alan Hurtarte\",\"details\":\"This implements price feed as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"a contract for crow funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is to demo sample funding contracts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/** @title a contract for crow funding\\n *  @author Alan Hurtarte\\n *  @notice This contract is to demo sample funding contracts\\n *  @dev This implements price feed as our library\\n */\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n\\n    address private immutable i_owner;\\n\\n    uint256 public constant MINIMUM_USD = 50 * 10**18;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    function getVersion() public view returns (uint256) {\\n        // ETH/USD price feed address of Goerli Network.\\n        return s_priceFeed.version();\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x10585b9d7fa350d959219688e792d60150c04983aedd5b373bb0fcc24476cf7c\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x03051d7dee7664301ac9daa006156decaa2bc64d2ecfc91fe35499cbaca42dc2\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200114238038062001142833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c610fca620001786000396000818161040a01526106590152610fca6000f3fe60806040526004361061007f5760003560e01c8063893d20e81161004e578063893d20e8146101425780639e87a5cd1461016d578063b60d428814610198578063d7b4750c146101a25761008e565b80630343fb25146100985780630d8e6e2c146100d55780633ccfd60b146101005780636b69a592146101175761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100bf60048036038101906100ba91906108d5565b610319565b6040516100cc919061091b565b60405180910390f35b3480156100e157600080fd5b506100ea610361565b6040516100f7919061091b565b60405180910390f35b34801561010c57600080fd5b50610115610408565b005b34801561012357600080fd5b5061012c610648565b604051610139919061091b565b60405180910390f35b34801561014e57600080fd5b50610157610655565b6040516101649190610945565b60405180910390f35b34801561017957600080fd5b5061018261067d565b60405161018f91906109bf565b60405180910390f35b6101a06101df565b005b3480156101ae57600080fd5b506101c960048036038101906101c49190610a06565b6106a7565b6040516101d69190610945565b60405180910390f35b6802b5e3af16b188000061021e600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106ef90919063ffffffff16565b101561025f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025690610a90565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ad9190610adf565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156103cb57600080fd5b505afa1580156103df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104039190610b4a565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461048d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610538576000600182815481106104b3576104b2610b77565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061053090610ba6565b915050610490565b50600067ffffffffffffffff81111561055457610553610bef565b5b6040519080825280602002602001820160405280156105825781602001602082028036833780820191505090505b50600190805190602001906105989291906107cb565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516105bf90610c4f565b60006040518083038185875af1925050503d80600081146105fc576040519150601f19603f3d011682016040523d82523d6000602084013e610601565b606091505b5050905080610645576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063c90610cb0565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600182815481106106bd576106bc610b77565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806106fb8361072b565b90506000670de0b6b3a764000085836107149190610cd0565b61071e9190610d59565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561077457600080fd5b505afa158015610788573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ac9190610e02565b5050509150506402540be400816107c39190610e7d565b915050919050565b828054828255906000526020600020908101928215610844579160200282015b828111156108435782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906107eb565b5b5090506108519190610855565b5090565b5b8082111561086e576000816000905550600101610856565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108a282610877565b9050919050565b6108b281610897565b81146108bd57600080fd5b50565b6000813590506108cf816108a9565b92915050565b6000602082840312156108eb576108ea610872565b5b60006108f9848285016108c0565b91505092915050565b6000819050919050565b61091581610902565b82525050565b6000602082019050610930600083018461090c565b92915050565b61093f81610897565b82525050565b600060208201905061095a6000830184610936565b92915050565b6000819050919050565b600061098561098061097b84610877565b610960565b610877565b9050919050565b60006109978261096a565b9050919050565b60006109a98261098c565b9050919050565b6109b98161099e565b82525050565b60006020820190506109d460008301846109b0565b92915050565b6109e381610902565b81146109ee57600080fd5b50565b600081359050610a00816109da565b92915050565b600060208284031215610a1c57610a1b610872565b5b6000610a2a848285016109f1565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a7a601b83610a33565b9150610a8582610a44565b602082019050919050565b60006020820190508181036000830152610aa981610a6d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610aea82610902565b9150610af583610902565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b2a57610b29610ab0565b5b828201905092915050565b600081519050610b44816109da565b92915050565b600060208284031215610b6057610b5f610872565b5b6000610b6e84828501610b35565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610bb182610902565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610be457610be3610ab0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c39600083610c1e565b9150610c4482610c29565b600082019050919050565b6000610c5a82610c2c565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c9a600b83610a33565b9150610ca582610c64565b602082019050919050565b60006020820190508181036000830152610cc981610c8d565b9050919050565b6000610cdb82610902565b9150610ce683610902565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610d1f57610d1e610ab0565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d6482610902565b9150610d6f83610902565b925082610d7f57610d7e610d2a565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610da981610d8a565b8114610db457600080fd5b50565b600081519050610dc681610da0565b92915050565b6000819050919050565b610ddf81610dcc565b8114610dea57600080fd5b50565b600081519050610dfc81610dd6565b92915050565b600080600080600060a08688031215610e1e57610e1d610872565b5b6000610e2c88828901610db7565b9550506020610e3d88828901610ded565b9450506040610e4e88828901610b35565b9350506060610e5f88828901610b35565b9250506080610e7088828901610db7565b9150509295509295909350565b6000610e8882610dcc565b9150610e9383610dcc565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610ed257610ed1610ab0565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610f0f57610f0e610ab0565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610f4c57610f4b610ab0565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f8957610f88610ab0565b5b82820290509291505056fea2646970667358221220d515e1a4414db53ae7ec8d83360efaf5e069ce160f4bb2d8892a77f66c30ac1764736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063893d20e81161004e578063893d20e8146101425780639e87a5cd1461016d578063b60d428814610198578063d7b4750c146101a25761008e565b80630343fb25146100985780630d8e6e2c146100d55780633ccfd60b146101005780636b69a592146101175761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100bf60048036038101906100ba91906108d5565b610319565b6040516100cc919061091b565b60405180910390f35b3480156100e157600080fd5b506100ea610361565b6040516100f7919061091b565b60405180910390f35b34801561010c57600080fd5b50610115610408565b005b34801561012357600080fd5b5061012c610648565b604051610139919061091b565b60405180910390f35b34801561014e57600080fd5b50610157610655565b6040516101649190610945565b60405180910390f35b34801561017957600080fd5b5061018261067d565b60405161018f91906109bf565b60405180910390f35b6101a06101df565b005b3480156101ae57600080fd5b506101c960048036038101906101c49190610a06565b6106a7565b6040516101d69190610945565b60405180910390f35b6802b5e3af16b188000061021e600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106ef90919063ffffffff16565b101561025f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025690610a90565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ad9190610adf565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156103cb57600080fd5b505afa1580156103df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104039190610b4a565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461048d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610538576000600182815481106104b3576104b2610b77565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061053090610ba6565b915050610490565b50600067ffffffffffffffff81111561055457610553610bef565b5b6040519080825280602002602001820160405280156105825781602001602082028036833780820191505090505b50600190805190602001906105989291906107cb565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516105bf90610c4f565b60006040518083038185875af1925050503d80600081146105fc576040519150601f19603f3d011682016040523d82523d6000602084013e610601565b606091505b5050905080610645576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063c90610cb0565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600182815481106106bd576106bc610b77565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806106fb8361072b565b90506000670de0b6b3a764000085836107149190610cd0565b61071e9190610d59565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561077457600080fd5b505afa158015610788573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ac9190610e02565b5050509150506402540be400816107c39190610e7d565b915050919050565b828054828255906000526020600020908101928215610844579160200282015b828111156108435782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906107eb565b5b5090506108519190610855565b5090565b5b8082111561086e576000816000905550600101610856565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108a282610877565b9050919050565b6108b281610897565b81146108bd57600080fd5b50565b6000813590506108cf816108a9565b92915050565b6000602082840312156108eb576108ea610872565b5b60006108f9848285016108c0565b91505092915050565b6000819050919050565b61091581610902565b82525050565b6000602082019050610930600083018461090c565b92915050565b61093f81610897565b82525050565b600060208201905061095a6000830184610936565b92915050565b6000819050919050565b600061098561098061097b84610877565b610960565b610877565b9050919050565b60006109978261096a565b9050919050565b60006109a98261098c565b9050919050565b6109b98161099e565b82525050565b60006020820190506109d460008301846109b0565b92915050565b6109e381610902565b81146109ee57600080fd5b50565b600081359050610a00816109da565b92915050565b600060208284031215610a1c57610a1b610872565b5b6000610a2a848285016109f1565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a7a601b83610a33565b9150610a8582610a44565b602082019050919050565b60006020820190508181036000830152610aa981610a6d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610aea82610902565b9150610af583610902565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b2a57610b29610ab0565b5b828201905092915050565b600081519050610b44816109da565b92915050565b600060208284031215610b6057610b5f610872565b5b6000610b6e84828501610b35565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610bb182610902565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610be457610be3610ab0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c39600083610c1e565b9150610c4482610c29565b600082019050919050565b6000610c5a82610c2c565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c9a600b83610a33565b9150610ca582610c64565b602082019050919050565b60006020820190508181036000830152610cc981610c8d565b9050919050565b6000610cdb82610902565b9150610ce683610902565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610d1f57610d1e610ab0565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d6482610902565b9150610d6f83610902565b925082610d7f57610d7e610d2a565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610da981610d8a565b8114610db457600080fd5b50565b600081519050610dc681610da0565b92915050565b6000819050919050565b610ddf81610dcc565b8114610dea57600080fd5b50565b600081519050610dfc81610dd6565b92915050565b600080600080600060a08688031215610e1e57610e1d610872565b5b6000610e2c88828901610db7565b9550506020610e3d88828901610ded565b9450506040610e4e88828901610b35565b9350506060610e5f88828901610b35565b9250506080610e7088828901610db7565b9150509295509295909350565b6000610e8882610dcc565b9150610e9383610dcc565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610ed257610ed1610ab0565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610f0f57610f0e610ab0565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610f4c57610f4b610ab0565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f8957610f88610ab0565b5b82820290509291505056fea2646970667358221220d515e1a4414db53ae7ec8d83360efaf5e069ce160f4bb2d8892a77f66c30ac1764736f6c63430008080033",
  "devdoc": {
    "author": "Alan Hurtarte",
    "details": "This implements price feed as our library",
    "kind": "dev",
    "methods": {},
    "title": "a contract for crow funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is to demo sample funding contracts",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}